
//    Use a CSS framework other than Bootstrap.   ///we are using tailwind and bootstrap

//    Be deployed to GitHub Pages.

//    Be interactive (i.e: accept and respond to user input).

//    Use at least two server-side APIs.  /// we have one

//    Does not use alerts, confirms, or prompts (use modals).  //// js has alerts for. To use modals we need to make the alerts into text of what the user cant do.

//    Use client-side storage to store persistent data. 

//    Be responsive.

//    Have a polished UI. 

//    Have a clean repository that meets quality coding standards (file structure, naming conventions, 
//    follows best practices for class/id-naming conventions, indentation, quality comments, etc.).

//    Have a quality README (with unique name, description, technologies used, screenshot, and link to deployed application).

const apiUrl = `https://www.thecocktaildb.com/api/json/v2/9973533/search.php?s=margarita`;
fetch(apiUrl)
  .then(response => response.json())
  .then(data => {
    console.log(data);
  })
  .catch(error => {
    console.error(error);
  });


// Function to fetch cocktail details by name
function fetchCocktailDetails(cocktailName) {
  const apiUrl = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${encodeURIComponent(cocktailName)}`;
  return fetch(apiUrl)
    .then(response => response.json())
    .then(data => {
      if (data.drinks === null) {
        throw new Error('Cocktail not found.');
      }

      return data.drinks[0];
    });
}

// Function to search cocktails based on the entered alcohol
function searchCocktails() {
  const searchInput = document.getElementById('searchInput');
  const searchTerm = searchInput.value.trim();

  if (searchTerm === '') {
    alert('Please enter an alcohol.');
    return;
  }

  const apiUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${encodeURIComponent(searchTerm)}`;

  fetch(apiUrl)
    .then(response => response.json())
    .then(data => {
      console.log(data);
      const cocktails = data.drinks;
      if (cocktails === null) {
        displayNoCocktailsFound();
        return;
      }

      const cocktailPromises = cocktails.map(cocktail => fetchCocktailDetails(cocktail.strDrink));
      Promise.all(cocktailPromises)
        .then(cocktailDetails => {
          displayCocktails(cocktailDetails);
        })
        .catch(error => {
          console.log(error);
          alert('An error occurred while fetching cocktail details.');
        });
    })
    .catch(error => {
      console.log(error);
      alert('An error occurred while fetching cocktails.');
    });
}

// Function to display "No cocktails found" message
function displayNoCocktailsFound() {
  const cocktailList = document.getElementById('cocktailList');
  cocktailList.innerHTML = '<p>No cocktails found.</p>';
}

// Function to display the retrieved cocktails
function displayCocktails(cocktails) {
  const cocktailList = document.getElementById('cocktailList');
  cocktailList.innerHTML = '';

  cocktails.forEach(cocktail => {
    const cocktailItem = document.createElement('div');
    cocktailItem.classList.add('mb-4', 'p-4', 'bg-gray-100', 'rounded');

    const cocktailName = document.createElement('h3');
    cocktailName.classList.add('text-lg', 'font-bold', 'mb-2');
    cocktailName.textContent = cocktail.strDrink;

    const ingredientsTitle = document.createElement('p');
    ingredientsTitle.classList.add('font-bold', 'mb-1');
    ingredientsTitle.textContent = 'Ingredients:';

    const ingredientsList = document.createElement('ul');
    cocktailItem.classList.add('mb-2');
    for (let i = 1; i <= 15; i++) {
      const ingredient = cocktail[`strIngredient${i}`];
      const measure = cocktail[`strMeasure${i}`];
      if (ingredient) {
        const ingredientItem = document.createElement('li');
        ingredientItem.textContent = `${measure ? measure + ' of ' : ''}${ingredient}`;
        ingredientsList.appendChild(ingredientItem);
      }
    }

    const cocktailRating = document.createElement('select');
    cocktailRating.classList.add('mb-2');
    cocktailRating.innerHTML = `
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
      `;

    const feedbackInput = document.createElement('textarea');
    feedbackInput.classList.add('w-full', 'h-20', 'px-3', 'py-2', 'border', 'border-gray-300', 'rounded');
    feedbackInput.placeholder = 'What did you like or dislike about this cocktail?';

    cocktailItem.appendChild(cocktailName);
    cocktailItem.appendChild(ingredientsTitle);
    cocktailItem.appendChild(ingredientsList);
    cocktailItem.appendChild(cocktailRating);
    cocktailItem.appendChild(feedbackInput);
    cocktailList.appendChild(cocktailItem);
  });
}

// Event listener for the search button click
const searchBtn = document.getElementById('searchBtn');
searchBtn.addEventListener('click', searchCocktails);


   <!-- <div id="cocktailList" class="md:flex flex-wrap md:flex-row sm:flex-col justify-between">
      <div class="drink-card mb-4 p-4 bg-gray-100 rounded flex justify-between">
        <div class="drink-info">
          <h3 class="text-lg font-bold mb-2">Margarita</h3>
          <p class="font-bold mb-1">Testing ingredients title</p>
          <ul class="mb-2">
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
          </ul>
        </div>
        <div class="drink-image">
          <img src="./assets/images/margarita image.jpg" alt="Margarita" class="w-full h-auto">
        </div>
      </div>


      <div class="drink-card mb-4 p-4 bg-gray-100 rounded">
        <div class="drink-info">
          <h3 class="text-lg font-bold mb-2">Margarita</h3>
          <p class="font-bold mb-1">Testing ingredients title</p>
          <ul class="mb-2">
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
          </ul>
        </div>
        <div class="drink-image">
          <img src="./assets/images/margarita image.jpg" alt="Margarita">
        </div>
      </div>

      <div class="drink-card mb-4 p-4 bg-gray-100 rounded">
        <div class="drink-info">
          <h3 class="text-lg font-bold mb-2">Margarita</h3>
          <p class="font-bold mb-1">Testing ingredients title</p>
          <ul class="mb-2">
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
          </ul>
        </div>
        <div class="drink-image">
          <img src="./assets/images/margarita image.jpg" alt="Margarita">
        </div>
      </div>

      <div class="drink-card mb-4 p-4 bg-gray-100 rounded">
        <div class="drink-info">
          <h3 class="text-lg font-bold mb-2">Margarita</h3>
          <p class="font-bold mb-1">Testing ingredients title</p>
          <ul class="mb-2">
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
            <li>ingredients</li>
          </ul>
        </div>
        <div class="drink-image">
          <img src="./assets/images/margarita image.jpg" alt="Margarita">
        </div>
      </div> -->